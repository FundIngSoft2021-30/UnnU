{"ast":null,"code":"import firebase from \"firebase\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAJ6toDLOGsOo1X8s2r9UPEooXkQ9vRvV0\",\n  authDomain: \"unnuapp-52499.firebaseapp.com\",\n  databaseURL: \"https://unnuapp-52499-default-rtdb.firebaseio.com\",\n  projectId: \"unnuapp-52499\",\n  storageBucket: \"unnuapp-52499.appspot.com\",\n  messagingSenderId: \"132126522043\",\n  appId: \"1:132126522043:web:2c2901ec48a055c339079e\",\n  measurementId: \"G-FVKD3BER01\"\n};\nconst app = firebase.initializeApp(firebaseConfig);\nconst auth = app.auth();\nconst db = app.firestore();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n  try {\n    const res = await auth.signInWithPopup(googleProvider);\n    const user = res.user;\n    const query = await db.collection(\"users\").where(\"uid\", \"==\", user.uid).get();\n\n    if (query.docs.length === 0) {\n      await db.collection(\"users\").add({\n        uid: user.uid,\n        name: user.displayName,\n        authProvider: \"google\",\n        email: user.email,\n        username: user.username\n      });\n    }\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst signInWithEmailAndPassword = async (email, password) => {\n  try {\n    await auth.signInWithEmailAndPassword(email, password);\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst registerWithEmailAndPassword = async (name, username, email, password) => {\n  try {\n    const res = await auth.createUserWithEmailAndPassword(email, password);\n    const user = res.user;\n    await db.collection(\"users\").add({\n      uid: user.uid,\n      name,\n      authProvider: \"local\",\n      email\n    });\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst sendPasswordResetEmail = async email => {\n  try {\n    await auth.sendPasswordResetEmail(email);\n    alert(\"Password reset link sent!\");\n  } catch (err) {\n    console.error(err);\n    alert(err.message);\n  }\n};\n\nconst logout = () => {\n  auth.signOut();\n};\n\nexport { auth, db, signInWithGoogle, signInWithEmailAndPassword, registerWithEmailAndPassword, sendPasswordResetEmail, logout };","map":{"version":3,"sources":["C:/Users/sices/Documents/GitHub/firebase-auth-article/src/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","res","signInWithPopup","user","query","collection","where","uid","get","docs","length","add","name","displayName","authProvider","email","username","err","console","error","alert","message","signInWithEmailAndPassword","password","registerWithEmailAndPassword","createUserWithEmailAndPassword","sendPasswordResetEmail","logout","signOut"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJ6toDLOGsOo1X8s2r9UPEooXkQ9vRvV0\",\r\n  authDomain: \"unnuapp-52499.firebaseapp.com\",\r\n  databaseURL: \"https://unnuapp-52499-default-rtdb.firebaseio.com\",\r\n  projectId: \"unnuapp-52499\",\r\n  storageBucket: \"unnuapp-52499.appspot.com\",\r\n  messagingSenderId: \"132126522043\",\r\n  appId: \"1:132126522043:web:2c2901ec48a055c339079e\",\r\n  measurementId: \"G-FVKD3BER01\"\r\n};\r\n\r\nconst app = firebase.initializeApp(firebaseConfig);\r\nconst auth = app.auth();\r\nconst db = app.firestore();\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nconst signInWithGoogle = async () => {\r\n  try {\r\n    const res = await auth.signInWithPopup(googleProvider);\r\n    const user = res.user;\r\n    const query = await db\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", user.uid)\r\n      .get();\r\n    if (query.docs.length === 0) {\r\n      await db.collection(\"users\").add({\r\n        uid: user.uid,\r\n        name: user.displayName,\r\n        authProvider: \"google\",\r\n        email: user.email,\r\n        username : user.username\r\n      });\r\n    }\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst signInWithEmailAndPassword = async (email, password) => {\r\n  try {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst registerWithEmailAndPassword = async (name,username, email, password) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(email, password);\r\n    const user = res.user;\r\n    await db.collection(\"users\").add({\r\n      uid: user.uid,\r\n      name,\r\n      authProvider: \"local\",\r\n      email,\r\n    });\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst sendPasswordResetEmail = async (email) => {\r\n  try {\r\n    await auth.sendPasswordResetEmail(email);\r\n    alert(\"Password reset link sent!\");\r\n  } catch (err) {\r\n    console.error(err);\r\n    alert(err.message);\r\n  }\r\n};\r\n\r\nconst logout = () => {\r\n  auth.signOut();\r\n};\r\n\r\nexport {\r\n  auth,\r\n  db,\r\n  signInWithGoogle,\r\n  signInWithEmailAndPassword,\r\n  registerWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  logout,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}